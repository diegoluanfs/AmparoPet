// <auto-generated />
using System;
using API.AmparoPet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.AmparoPet.Migrations
{
    [DbContext(typeof(AmparoPetContext))]
    [Migration("20240316153750_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("API.AmparoPet.Models.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AddressID");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("API.AmparoPet.Models.CardVaccine", b =>
                {
                    b.Property<int>("CardVaccineID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CardVaccineID");

                    b.ToTable("CardVaccine", (string)null);
                });

            modelBuilder.Entity("API.AmparoPet.Models.Carer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Carer", (string)null);
                });

            modelBuilder.Entity("API.AmparoPet.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .HasColumnType("int");

                    b.Property<int?>("CarerID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CommentID");

                    b.HasIndex("CarerID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("API.AmparoPet.Models.Document", b =>
                {
                    b.Property<int>("DocumentID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DocumentID");

                    b.ToTable("Document", (string)null);
                });

            modelBuilder.Entity("API.AmparoPet.Models.Pet", b =>
                {
                    b.Property<int>("PetID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.HasKey("PetID");

                    b.HasIndex("PostId");

                    b.ToTable("Pet", (string)null);
                });

            modelBuilder.Entity("API.AmparoPet.Models.Photo", b =>
                {
                    b.Property<int>("PhotoID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.HasKey("PhotoID");

                    b.HasIndex("PostId");

                    b.ToTable("Photo", (string)null);
                });

            modelBuilder.Entity("API.AmparoPet.Models.Post", b =>
                {
                    b.Property<int>("PostID")
                        .HasColumnType("int");

                    b.Property<int?>("CarerID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PostID");

                    b.HasIndex("CarerID");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("API.AmparoPet.Models.Reaction", b =>
                {
                    b.Property<int>("ReactionID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.HasKey("ReactionID");

                    b.HasIndex("PostId");

                    b.ToTable("Reaction", (string)null);
                });

            modelBuilder.Entity("API.AmparoPet.Models.Vaccine", b =>
                {
                    b.Property<int>("VaccineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineId"), 1L, 1);

                    b.Property<DateTime>("AdministeredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CardVaccineId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VaccineId");

                    b.HasIndex("CardVaccineId");

                    b.ToTable("Vaccine", (string)null);
                });

            modelBuilder.Entity("CarerPet", b =>
                {
                    b.Property<int>("CaregiversID")
                        .HasColumnType("int");

                    b.Property<int>("PetsPetID")
                        .HasColumnType("int");

                    b.HasKey("CaregiversID", "PetsPetID");

                    b.HasIndex("PetsPetID");

                    b.ToTable("CarerPet");
                });

            modelBuilder.Entity("CarerPhoto", b =>
                {
                    b.Property<int>("CaregiversID")
                        .HasColumnType("int");

                    b.Property<int>("PhotosPhotoID")
                        .HasColumnType("int");

                    b.HasKey("CaregiversID", "PhotosPhotoID");

                    b.HasIndex("PhotosPhotoID");

                    b.ToTable("CarerPhoto");
                });

            modelBuilder.Entity("PetPhoto", b =>
                {
                    b.Property<int>("PetsPetID")
                        .HasColumnType("int");

                    b.Property<int>("PhotosPhotoID")
                        .HasColumnType("int");

                    b.HasKey("PetsPetID", "PhotosPhotoID");

                    b.HasIndex("PhotosPhotoID");

                    b.ToTable("PetPhoto");
                });

            modelBuilder.Entity("API.AmparoPet.Models.Address", b =>
                {
                    b.HasOne("API.AmparoPet.Models.Carer", "Carer")
                        .WithOne("Address")
                        .HasForeignKey("API.AmparoPet.Models.Address", "AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.AmparoPet.Models.Post", "Post")
                        .WithOne("Address")
                        .HasForeignKey("API.AmparoPet.Models.Address", "AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carer");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("API.AmparoPet.Models.CardVaccine", b =>
                {
                    b.HasOne("API.AmparoPet.Models.Pet", "Pet")
                        .WithOne("CardVaccine")
                        .HasForeignKey("API.AmparoPet.Models.CardVaccine", "CardVaccineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("API.AmparoPet.Models.Comment", b =>
                {
                    b.HasOne("API.AmparoPet.Models.Carer", null)
                        .WithMany("Comments")
                        .HasForeignKey("CarerID");
                });

            modelBuilder.Entity("API.AmparoPet.Models.Document", b =>
                {
                    b.HasOne("API.AmparoPet.Models.Carer", "Carer")
                        .WithOne("Document")
                        .HasForeignKey("API.AmparoPet.Models.Document", "DocumentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carer");
                });

            modelBuilder.Entity("API.AmparoPet.Models.Pet", b =>
                {
                    b.HasOne("API.AmparoPet.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("API.AmparoPet.Models.Photo", b =>
                {
                    b.HasOne("API.AmparoPet.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("API.AmparoPet.Models.Post", b =>
                {
                    b.HasOne("API.AmparoPet.Models.Carer", null)
                        .WithMany("Posts")
                        .HasForeignKey("CarerID");
                });

            modelBuilder.Entity("API.AmparoPet.Models.Reaction", b =>
                {
                    b.HasOne("API.AmparoPet.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("API.AmparoPet.Models.Vaccine", b =>
                {
                    b.HasOne("API.AmparoPet.Models.CardVaccine", "CardVaccine")
                        .WithMany()
                        .HasForeignKey("CardVaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardVaccine");
                });

            modelBuilder.Entity("CarerPet", b =>
                {
                    b.HasOne("API.AmparoPet.Models.Carer", null)
                        .WithMany()
                        .HasForeignKey("CaregiversID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.AmparoPet.Models.Pet", null)
                        .WithMany()
                        .HasForeignKey("PetsPetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarerPhoto", b =>
                {
                    b.HasOne("API.AmparoPet.Models.Carer", null)
                        .WithMany()
                        .HasForeignKey("CaregiversID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.AmparoPet.Models.Photo", null)
                        .WithMany()
                        .HasForeignKey("PhotosPhotoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetPhoto", b =>
                {
                    b.HasOne("API.AmparoPet.Models.Pet", null)
                        .WithMany()
                        .HasForeignKey("PetsPetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.AmparoPet.Models.Photo", null)
                        .WithMany()
                        .HasForeignKey("PhotosPhotoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API.AmparoPet.Models.Carer", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Comments");

                    b.Navigation("Document");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("API.AmparoPet.Models.Pet", b =>
                {
                    b.Navigation("CardVaccine");
                });

            modelBuilder.Entity("API.AmparoPet.Models.Post", b =>
                {
                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
